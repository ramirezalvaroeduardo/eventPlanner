{"version":3,"sources":["getAwesomeFontThemes.js","TopMenu.js","playerBox.js","MatrixBox.js","AddPlayer.js","index.js"],"names":["library","add","fas","fasArray","Object","keys","definitions","getFAS","refreshScreen","event","preventDefault","document","querySelector","style","display","window","location","reload","TopMenu","props","squareCont","Navbar","bg","expand","variant","Brand","href","Toggle","aria-controls","Collapse","id","Nav","className","Link","onClick","showPlayerForm","NavDropdown","title","Item","getElementsByClassName","startGame","playerBox","playerId","cardHeader","playerScore","Button","value","headerId","scoreId","chosenBoxes","canPlay","playerBool","playerTurn","MatrixBox","size","icon","iconVal","handleAction","actionItem","getElementById","textContent","firstPlayer","secondPlayer","parentElement","background","handleChosenBoxes","boxPair","chosenIconId","targetElement","onclick","disabled","PlayerSC","Number","increaseScore","children","currPlayerScoreNumber","nextPlayerScoreNumber","switchPlayer","MatrixGroup","boxArray","minVal","maxVal","boxObj","counter","numBox","undefined","Math","ceil","floor","random","selBox","item","push","name","map","boxId","index","chosenObj","chosenId","targetButton","target","attributes","type","transition","opacity","localName","length","setTimeout","checkClickedButton","playerNames","submitPlayer","playerName","getElementsByName","alert","playerHeader","AddPlayerForm","Form","Group","controlId","Label","Control","placeholder","required","ReactDOM","render","StrictMode"],"mappings":"4QAIAA,IAAQC,IAAKC,KAEb,IAAIC,EAAWC,OAAOC,KAAML,IAAQM,YAAYJ,KAMjCK,MAJf,WACI,OAAOJ,G,sDCFX,SAASK,EAAeC,GACpBA,EAAMC,iBACNC,SAASC,cAAe,iBAAkBC,MAAMC,QAAU,OAC1DH,SAASC,cAAe,eAAgBC,MAAMC,QAAU,GACxDC,OAAOC,SAASC,SAwCLC,MApBf,SAAkBC,GAEd,OADSA,EAAMC,WAEX,eAACC,EAAA,EAAD,CAAQC,GAAG,OAAOC,OAAO,KAAKC,QAAQ,OAAtC,UACA,cAACH,EAAA,EAAOI,MAAR,CAAcC,KAAK,QAAnB,yBACA,cAACL,EAAA,EAAOM,OAAR,CAAeC,gBAAc,qBAC7B,cAACP,EAAA,EAAOQ,SAAR,CAAiBC,GAAG,mBAApB,SACI,eAACC,EAAA,EAAD,CAAKC,UAAU,UAAf,UACA,cAACD,EAAA,EAAIE,KAAL,CAAUC,QAAS,SAAAzB,GAAK,OAAID,EAAeC,IAA3C,kBACA,cAACsB,EAAA,EAAIE,KAAL,CAAUC,QAAS,SAAAzB,GAAK,OAhBpC,SAAyBA,GACrBA,EAAMC,iBACNC,SAASC,cAAe,cAAeC,MAAMC,QAAU,OACvDH,SAASC,cAAe,eAAgBC,MAAMC,QAAU,QAapBqB,CAAgB1B,IAASiB,KAAK,aAA1D,wBACA,eAACU,EAAA,EAAD,CAAaC,MAAM,UAAUP,GAAG,qBAAhC,UACI,cAACM,EAAA,EAAYE,KAAb,CAAkBJ,QAAS,SAAAzB,GAAK,OAAID,EAAeC,IAAnD,mBACA,cAAC2B,EAAA,EAAYE,KAAb,CAAkBJ,QAAS,SAAAzB,GAAK,OA7BhD,SAAoBA,GAChBA,EAAMC,iBADkB,oBAEFC,SAAS4B,uBAAwB,iBAF/B,IAExB,IAAI,EAAJ,qBAAyE,QAC3D1B,MAAMC,QAAQ,QAHJ,kDAKFH,SAAS4B,uBAAwB,eAL/B,IAKxB,IAAI,EAAJ,qBAAuE,QACzD1B,MAAMC,QAAQ,OANJ,+BA6BwB0B,CAAW/B,IAA/C,+BCzBDgC,MAbf,SAAoBtB,GAChB,IAAIuB,EAASvB,EAAMW,GACfa,EAAWxB,EAAMwB,WACjBC,EAAYzB,EAAMyB,YAClBZ,EAAUb,EAAMa,UACpB,OACI,eAACa,EAAA,EAAD,CAAQf,GAAIY,EAAUI,MAAOJ,EAAUV,UAAWA,EAAWE,QAASf,EAAMe,QAA5E,UACI,mBAAGJ,GAAIX,EAAM4B,SAAb,SAAwBJ,IACxB,mBAAGb,GAAIX,EAAM6B,QAAb,SAAuBJ,Q,QCJ/BK,EAAY,GACZC,GAAU,EACVC,GAAW,EACXC,EAAW,KAEf,SAASC,EAAWlC,GAChB,OACI,eAAC0B,EAAA,EAAD,CAAQrB,QAAQ,UAAU8B,KAAK,KAAKpB,QAAUf,EAAMe,QAChDF,UAAU,eAAec,MAAQ3B,EAAM2B,MAAQhB,GAAKX,EAAMW,GAD9D,UAEI,mBAAGE,UAAU,0BAAb,SAAyCb,EAAMW,KAC/C,cAAC,IAAD,CAAiBE,UAAU,aAAauB,KAAOpC,EAAMqC,aAqBjE,SAASC,EAAchD,GACnBA,EAAMC,iBACN,IAAIgD,EAAa/C,SAASgD,eAAgB,WAC1C,GAA+B,UAA3BD,EAAWE,YAAyB,CACpCV,GAAU,EACVQ,EAAWE,YAAc,QACzB,IAAIC,EAAclD,SAASgD,eAAgB,MACvCG,EAAenD,SAASgD,eAAgB,MAC5CE,EAAYE,cAAclD,MAAMmD,WAAa,mBAC7CF,EAAaC,cAAclD,MAAMmD,WAAa,mBAzBtD,WAAsB,IAAD,gBACKrD,SAAS4B,uBAAwB,iBADtC,IACjB,IAAI,EAAJ,qBAAyE,QAC3D1B,MAAMC,QAAQ,QAFX,kDAIKH,SAAS4B,uBAAwB,eAJtC,IAIjB,IAAI,EAAJ,qBAAuE,QACzD1B,MAAMC,QAAQ,OALX,+BA0Bb0B,QAEAU,GAAU,EACVQ,EAAWE,YAAc,QAnB7BjD,SAASC,cAAe,iBAAkBC,MAAMC,QAAU,OAC1DH,SAASC,cAAe,eAAgBC,MAAMC,QAAU,GACxDC,OAAOC,SAASC,SAsCpB,SAASgD,EAAmBC,GACpBA,EAAQ,GAAGC,eAAiBD,EAAQ,GAAGC,cAEvCD,EAAQ,GAAGE,cAAcC,QAAU,2BACnCH,EAAQ,GAAGE,cAAcC,QAAU,2BACnCH,EAAQ,GAAGE,cAAcE,SAAW,WACpCJ,EAAQ,GAAGE,cAAcvD,MAAMmD,WAAc,iBAC7CE,EAAQ,GAAGE,cAAcE,SAAW,WACpCJ,EAAQ,GAAGE,cAAcvD,MAAMmD,WAAc,iBAbrD,SAAwBO,GACpB,IAAI3B,EAAcjC,SAASgD,eAAgBY,GAC3C3B,EAAYgB,YAAcY,OAAQ5B,EAAYgB,aAAgB,EAY1Da,CAAerB,KAGfc,EAAQ,GAAGE,cAAcM,SAAS,GAAG7D,MAAMC,QAAU,QACrDoD,EAAQ,GAAGE,cAAcM,SAAS,GAAG7D,MAAMC,QAAU,OACrDoD,EAAQ,GAAGE,cAAcM,SAAS,GAAG7D,MAAMC,QAAU,QACrDoD,EAAQ,GAAGE,cAAcM,SAAS,GAAG7D,MAAMC,QAAU,OACrDsC,EAhCR,WACI,IAAIuB,EAAwB,IAAMH,OAAQrB,GACzBxC,SAASgD,eAAgBgB,GAC/BZ,cAAclD,MAAMmD,WAAa,mBAC5Cb,GAAcA,EACd,IAAIyB,EAAwB,IAAMJ,OAAQrB,GAG1C,OAFiBxC,SAASgD,eAAgBiB,GAC/Bb,cAAclD,MAAMmD,WAAa,mBACrCY,EAwBUC,IAEjB5B,EAAY,GAuHD6B,MA5Df,SAAsB3D,GAQlB,IAPA,IAAI4D,EAAS5D,EAAMC,WACfjB,EAASgB,EAAMhB,SACf6E,EAAO,EACPC,EAAO,EACPC,EAAO,GAGFC,EAAQ,EAAGA,GAAWX,OAAQrD,EAAMiE,QAAYD,IACrD,QAAwBE,IAApBH,EAAOC,GAAyB,CAEhCH,EAAOM,KAAKC,KAAM,GAClBN,EAAOK,KAAKE,MAAO,MACnBN,EAAOC,GAASG,KAAKE,MAAOF,KAAKG,UAAaR,EAASD,EAAS,GAAMA,GAEtEA,EAAOM,KAAKC,KAAMJ,GAClBF,EAAOK,KAAKE,MAAOhB,OAAQrD,EAAMiE,SAEjC,IADA,IAAIM,EAAOJ,KAAKE,MAAOF,KAAKG,UAAaR,EAASD,EAAS,GAAMA,QACvCK,IAAnBH,EAAOQ,IACVA,EAAOJ,KAAKE,MAAOF,KAAKG,UAAaR,EAASD,EAAS,GAAMA,GAEjEE,EAAOQ,GAAQR,EAAOC,GAK9B,IAAK,IAAIQ,KADTZ,EAAS,GACQG,EACbH,EAASa,KAAMV,EAAOS,IAG1B,OACI,gCACI,cAAC,EAAD,CAASvE,WAAY2D,EAAU7B,QAASA,IACxC,sBAAKlB,UAAU,YAAf,UACI,cAAC,EAAD,CAAmBe,SAAS,KAAKC,QAAQ,KAAKL,WAAW,WAAWC,YAAY,IAAIZ,UAAU,cAA9E,GAChB,cAAC,EAAD,CAAmBF,GAAG,SAClBa,WAAW,QACXkD,KAAK,QACL9C,SAAS,UACTH,YAAY,GACZZ,UAAU,eACVE,QAAS,SAAAzB,GAAK,OAAIgD,EAAchD,KANpB,GAOhB,cAAC,EAAD,CAAmBsC,SAAS,KAAKC,QAAQ,KAAKL,WAAW,WAAWC,YAAY,IAAIZ,UAAU,cAA9E,MAEpB,oBAAIA,UAAU,QAAd,yBACA,qBAAKA,UAAU,YAAf,SACK+C,EAASe,KAAI,SAAEC,EAAOC,GAAT,OACV,cAAC,EAAD,CACI9D,QAAS,SAAAzB,GAAK,OAxGtC,SAA6BA,GACzBA,EAAMC,iBACN,IAII0D,EAJA6B,EAAU,GACVC,EAAS,EACT/B,EAAa,EACbgC,EAAa1F,EAAM2F,OAEnBlD,KAEIiD,EAAaE,WAAW/B,UACxB6B,EAAapC,cAAcsC,WAAW/B,UACtC6B,EAAapC,cAAcA,cAAcsC,WAAW/B,YAG9B,WAAtB6B,EAAaG,MACbnC,EAAagC,EAAaE,WAAWvD,MAAMA,MAC3CoD,EAASC,EAAaE,WAAWvE,GAAGgB,OACpCsB,EAAc+B,GACAzB,SAAS,GAAG7D,MAAMC,QAAQ,OACxCsD,EAAcM,SAAS,GAAG7D,MAAM0F,WAAW,sBAC3CnC,EAAcM,SAAS,GAAG7D,MAAM2F,QAAQ,IACxCpC,EAAcM,SAAS,GAAG7D,MAAMC,QAAU,GAC1CsD,EAAcM,SAAS,GAAG7D,MAAM2F,QAAQ,KAEK,WAAzCL,EAAapC,cAAc0C,WAA4BN,EAAapC,cAAcO,UAUlFH,EAAagC,EAAapC,cAAcA,cAAcsC,WAAWvD,MAAMA,MACvEoD,EAASC,EAAapC,cAAcA,cAAcsC,WAAWvE,GAAGgB,QAVhEqB,EAAagC,EAAapC,cAAcsC,WAAWvD,MAAMA,MACzDoD,EAASC,EAAapC,cAAcsC,WAAWvE,GAAGgB,OAClDsB,EAAc+B,EAAapC,eACbW,SAAS,GAAG7D,MAAMC,QAAQ,OACxCsD,EAAcM,SAAS,GAAG7D,MAAM0F,WAAW,sBAC3CnC,EAAcM,SAAS,GAAG7D,MAAM2F,QAAQ,IACxCpC,EAAcM,SAAS,GAAG7D,MAAMC,QAAU,GAC1CsD,EAAcM,SAAS,GAAG7D,MAAM2F,QAAQ,KAMhDP,EAAS,SAAaC,EACtBD,EAAS,aAAiB9B,EAC1B8B,EAAS,cAAkB7B,EACA,IAAvBnB,EAAYyD,OACZzD,EAAY2C,KAAMK,GACY,IAAvBhD,EAAYyD,QAAgBR,IAAajD,EAAY,GAAGiD,WAC/DjD,EAAY2C,KAAMK,GAElBU,YACI,WACI1C,EAAmBhB,KAEvB,OAsD0B2D,CAAoBnG,IACtCqB,GAAIkE,EAAQ,EACZlD,MAAOiD,EACPvC,QAASrD,EAAS4F,IAJNC,EAAQ,Y,QChMxCa,G,MAAc,IAClB,SAASC,EAAcrG,GAEnB,GADAA,EAAMC,iBACFmG,EAAYH,OAAS,EAAI,CACzB,IAAIK,EAAapG,SAASqG,kBAAmB,cAC7C,GAA4B,KAAxBD,EAAW,GAAGjE,OAAgBiE,EAAW,GAAGjE,MAAM4D,OAAS,GAC3DO,MAAO,qEACJ,CACH,IAAIC,EAAevG,SAASgD,eAAgB,IAAMkD,EAAYH,QAC9DG,EAAYjB,KAAMmB,EAAW,GAAGjE,OAChCoE,EAAatD,YAAcmD,EAAW,GAAGjE,MACzCiE,EAAW,GAAGjE,MAAQ,IAGH,IAAvB+D,EAAYH,SAMhB/F,SAASC,cAAe,cAAeC,MAAMC,QAAU,QACvDH,SAASC,cAAe,eAAgBC,MAAMC,QAAU,QA4B7CqG,MAzBf,WACI,OACI,sBAAKnF,UAAU,aAAf,UACI,6CACA,+BACI,2EACA,uEACA,6CACA,4DACA,yEACA,2EAEJ,cAACoF,EAAA,EAAD,UACI,eAACA,EAAA,EAAKC,MAAN,CAAYC,UAAU,oBAAtB,UACI,cAACF,EAAA,EAAKG,MAAN,0BACA,cAACH,EAAA,EAAKI,QAAN,CAAc3B,KAAK,aAAaS,KAAK,OAAOmB,YAAY,cAAcC,UAAQ,SAGtF,cAAC7E,EAAA,EAAD,CAAQrB,QAAQ,UAAU8E,KAAK,SAASpE,QAAS,SAAAzB,GAAK,OAAIqG,EAAcrG,IAAxE,wBCtCRN,EAAWI,IAGfoH,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,EAAD,CAAWzC,OAPA,GAOoBjF,SAAUA,EAAUiB,WANxC,KAOX,cAAC,EAAD,OAEFT,SAASgD,eAAe,W","file":"static/js/main.efeca177.chunk.js","sourcesContent":["\r\nimport { library } from '@fortawesome/fontawesome-svg-core';\r\nimport { fas } from '@fortawesome/free-solid-svg-icons';\r\n\r\nlibrary.add( fas );\r\n\r\nvar fasArray = Object.keys( library.definitions.fas );\r\n\r\nfunction getFAS() {\r\n    return fasArray;\r\n}\r\n\r\nexport default getFAS;\r\n","\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\n\r\nlet boxArray=[];\r\n\r\nfunction refreshScreen( event ) {\r\n    event.preventDefault();\r\n    document.querySelector( \".MatrixNumber\" ).style.display = \"none\";\r\n    document.querySelector( \".MatrixIcon\" ).style.display = \"\";\r\n    window.location.reload();\r\n}\r\n\r\nfunction startGame( event ) {\r\n    event.preventDefault();\r\n    for( let boxNumber of document.getElementsByClassName( \"MatrixNumber\" ) ){\r\n        boxNumber.style.display=\"block\";\r\n    }\r\n    for( let boxNumber of document.getElementsByClassName( \"MatrixIcon\" ) ){\r\n        boxNumber.style.display=\"none\";\r\n    }\r\n}\r\n\r\nfunction showPlayerForm( event ) {\r\n    event.preventDefault();\r\n    document.querySelector( \".MatrixBox\" ).style.display = \"none\";\r\n    document.querySelector( \".PlayerForm\" ).style.display = \"block\";\r\n}\r\n\r\n\r\nfunction TopMenu( props ) {\r\n    boxArray=props.squareCont;\r\n    return (\r\n        <Navbar bg=\"dark\" expand=\"lg\" variant=\"dark\">\r\n        <Navbar.Brand href=\"#home\">CONCENTRESE</Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n            <Nav className=\"mr-auto\">\r\n            <Nav.Link onClick={event => refreshScreen( event )}>Home</Nav.Link>\r\n            <Nav.Link onClick={event => showPlayerForm( event )} href=\"#AddPlayer\">Add Player</Nav.Link>\r\n            <NavDropdown title=\"Actions\" id=\"basic-nav-dropdown\">\r\n                <NavDropdown.Item onClick={event => refreshScreen( event )}>Reset</NavDropdown.Item>\r\n                <NavDropdown.Item onClick={event => startGame( event )}>Start</NavDropdown.Item>\r\n            </NavDropdown>\r\n            </Nav>\r\n        </Navbar.Collapse>\r\n        </Navbar>\r\n    )\r\n};\r\n\r\nexport default TopMenu;","\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./playerBox.css\";\r\n\r\nfunction playerBox( props ) {\r\n    let playerId=props.id;\r\n    let cardHeader=props.cardHeader;\r\n    let playerScore=props.playerScore;\r\n    let className=props.className;\r\n    return (\r\n        <Button id={playerId} value={playerId} className={className} onClick={props.onClick}>\r\n            <p id={props.headerId}>{cardHeader}</p>\r\n            <p id={props.scoreId}>{playerScore}</p>\r\n        </Button>\r\n    )\r\n}\r\n\r\nexport default playerBox;","\r\nimport React from \"react\";\r\nimport Button from \"react-bootstrap/Button\";\r\nimport \"./MatrixBox.css\"\r\nimport \"./playerBox.css\"\r\nimport TopMenu from \"./TopMenu\";\r\nimport PlayerBox from \"./playerBox\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\n\r\nlet chosenBoxes=[];\r\nlet canPlay = false;\r\nlet playerBool=false;\r\nlet playerTurn=\"S0\";\r\n\r\nfunction MatrixBox( props ){\r\n    return (\r\n        <Button variant=\"primary\" size=\"lg\" onClick={ props.onClick }\r\n            className=\"MatrixButton\" value={ props.value } id={ props.id }>\r\n            <i className=\"fa fa-star MatrixNumber\">{ props.id }</i>\r\n            <FontAwesomeIcon className=\"MatrixIcon\" icon={ props.iconVal } />\r\n        </Button>\r\n    )\r\n}\r\n\r\nfunction startGame() {\r\n    for( let boxNumber of document.getElementsByClassName( \"MatrixNumber\" ) ){\r\n        boxNumber.style.display=\"block\";\r\n    }\r\n    for( let boxNumber of document.getElementsByClassName( \"MatrixIcon\" ) ){\r\n        boxNumber.style.display=\"none\";\r\n    }\r\n}\r\n\r\nfunction refreshScreen() {\r\n    document.querySelector( \".MatrixNumber\" ).style.display = \"none\";\r\n    document.querySelector( \".MatrixIcon\" ).style.display = \"\";\r\n    window.location.reload();\r\n}\r\n\r\n\r\nfunction handleAction( event ){\r\n    event.preventDefault();\r\n    let actionItem = document.getElementById( \"PHeader\" );\r\n    if( actionItem.textContent === \"Start\") {\r\n        canPlay = true;\r\n        actionItem.textContent = \"Reset\";\r\n        let firstPlayer = document.getElementById( \"P0\" );\r\n        let secondPlayer = document.getElementById( \"P1\" );\r\n        firstPlayer.parentElement.style.background = \"rgb(0, 100, 170)\";\r\n        secondPlayer.parentElement.style.background = \"rgb(170, 40, 10)\";\r\n        startGame();\r\n    } else {\r\n        canPlay = false;\r\n        actionItem.textContent = \"Start\";\r\n        refreshScreen();\r\n    }\r\n}\r\n\r\nfunction switchPlayer(){\r\n    let currPlayerScoreNumber = \"S\" + Number( playerBool );\r\n    let currPlayer = document.getElementById( currPlayerScoreNumber );\r\n    currPlayer.parentElement.style.background = \"rgb(170, 40, 10)\";\r\n    playerBool = !playerBool;\r\n    let nextPlayerScoreNumber = \"S\" + Number( playerBool );\r\n    let nextPlayer = document.getElementById( nextPlayerScoreNumber );\r\n    nextPlayer.parentElement.style.background = \"rgb(0, 100, 170)\";\r\n    return nextPlayerScoreNumber;\r\n}\r\n\r\nfunction increaseScore( PlayerSC ){\r\n    let playerScore = document.getElementById( PlayerSC );\r\n    playerScore.textContent = Number( playerScore.textContent ) + 1;\r\n}\r\n\r\nfunction handleChosenBoxes( boxPair ){\r\n    if( boxPair[0].chosenIconId === boxPair[1].chosenIconId ) {\r\n        // Selections Matched\r\n        boxPair[0].targetElement.onclick = \"function(){return false}\";\r\n        boxPair[1].targetElement.onclick = \"function(){return false}\";\r\n        boxPair[0].targetElement.disabled = \"disabled\";\r\n        boxPair[0].targetElement.style.background =  \"rgb(5, 100, 5)\";\r\n        boxPair[1].targetElement.disabled = \"disabled\";\r\n        boxPair[1].targetElement.style.background =  \"rgb(5, 100, 5)\";\r\n        increaseScore( playerTurn );\r\n    } else {\r\n        // Selections DO NOT Match\r\n        boxPair[0].targetElement.children[0].style.display = \"block\";\r\n        boxPair[0].targetElement.children[1].style.display = \"none\";\r\n        boxPair[1].targetElement.children[0].style.display = \"block\";\r\n        boxPair[1].targetElement.children[1].style.display = \"none\";\r\n        playerTurn = switchPlayer();\r\n    }\r\n    chosenBoxes=[];\r\n}\r\n\r\nfunction checkClickedButton( event ){\r\n    event.preventDefault();\r\n    let chosenObj={};\r\n    let chosenId=0;\r\n    let chosenIconId=0;\r\n    let targetButton=event.target;\r\n    let targetElement;\r\n    if( canPlay &&\r\n        !(\r\n            targetButton.attributes.disabled || \r\n            targetButton.parentElement.attributes.disabled ||\r\n            targetButton.parentElement.parentElement.attributes.disabled\r\n        )\r\n    ) {\r\n        if( targetButton.type === \"button\" ) {\r\n            chosenIconId=targetButton.attributes.value.value;\r\n            chosenId=targetButton.attributes.id.value;\r\n            targetElement=targetButton;\r\n            targetElement.children[0].style.display=\"none\";\r\n            targetElement.children[0].style.transition=\"opacity 1s ease-out\";\r\n            targetElement.children[0].style.opacity=\"1\";\r\n            targetElement.children[1].style.display = \"\";\r\n            targetElement.children[1].style.opacity=\"1\";\r\n        } else {\r\n            if( targetButton.parentElement.localName === \"button\" && ! targetButton.parentElement.disabled ){\r\n                chosenIconId=targetButton.parentElement.attributes.value.value;\r\n                chosenId=targetButton.parentElement.attributes.id.value;\r\n                targetElement=targetButton.parentElement;\r\n                targetElement.children[0].style.display=\"none\";\r\n                targetElement.children[0].style.transition=\"opacity 1s ease-out\";\r\n                targetElement.children[0].style.opacity=\"1\";\r\n                targetElement.children[1].style.display = \"\";\r\n                targetElement.children[1].style.opacity=\"1\";\r\n            } else {\r\n                chosenIconId=targetButton.parentElement.parentElement.attributes.value.value;\r\n                chosenId=targetButton.parentElement.parentElement.attributes.id.value;\r\n            }\r\n        }\r\n        chosenObj[\"chosenId\"]=chosenId;\r\n        chosenObj[\"chosenIconId\"]=chosenIconId;\r\n        chosenObj[\"targetElement\"]=targetElement;\r\n        if( chosenBoxes.length === 0 ) {\r\n            chosenBoxes.push( chosenObj );\r\n        } else if( chosenBoxes.length === 1 && chosenId !== chosenBoxes[0].chosenId ) {\r\n            chosenBoxes.push( chosenObj );\r\n            // Make decision to increase result or return boxes //\r\n            setTimeout(\r\n                function(){\r\n                    handleChosenBoxes( chosenBoxes );\r\n                },\r\n                250\r\n            );\r\n        }\r\n    }\r\n}\r\n\r\nfunction MatrixGroup( props ) {\r\n    let boxArray=props.squareCont;\r\n    let fasArray=props.fasArray;\r\n    let minVal=0;\r\n    let maxVal=0;\r\n    let boxObj={};\r\n\r\n    // Loop to assign random values per pair of squares\r\n    for( let counter=1; counter<=( Number( props.numBox ) ); counter++ ) {\r\n        if( boxObj[counter] === undefined ) {\r\n            // Assign random value to current square\r\n            minVal=Math.ceil( 1 );\r\n            maxVal=Math.floor( 1002 );\r\n            boxObj[counter]=Math.floor( Math.random() * ( maxVal - minVal + 1 ) + minVal );\r\n            // Assign a value to random Square pair\r\n            minVal=Math.ceil( counter );\r\n            maxVal=Math.floor( Number( props.numBox ) );\r\n            var selBox=Math.floor( Math.random() * ( maxVal - minVal + 1 ) + minVal );\r\n            while( boxObj[selBox] !== undefined ) {\r\n                selBox=Math.floor( Math.random() * ( maxVal - minVal + 1 ) + minVal );\r\n            }\r\n            boxObj[selBox]=boxObj[counter];\r\n        }\r\n    }\r\n    // Loop to set array of values chosen\r\n    boxArray=[];\r\n    for( let item in boxObj ){\r\n        boxArray.push( boxObj[item] );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <TopMenu squareCont={boxArray} canPlay={canPlay} />\r\n            <div className=\"PlayerBox\">\r\n                <PlayerBox key={1} headerId=\"P0\" scoreId=\"S0\" cardHeader=\"Player 1\" playerScore=\"0\" className=\"PlayerCard\"/>\r\n                <PlayerBox key={3} id=\"Action\" \r\n                    cardHeader=\"Start\"\r\n                    name=\"Start\"\r\n                    headerId=\"PHeader\"\r\n                    playerScore=\"\" \r\n                    className=\"ActionButton\"\r\n                    onClick={event => handleAction( event )}/>\r\n                <PlayerBox key={2} headerId=\"P1\" scoreId=\"S1\" cardHeader=\"Player 2\" playerScore=\"0\" className=\"PlayerCard\"/>\r\n            </div>\r\n            <h1 className=\"Title\">CONCENTRESE</h1>\r\n            <div className=\"MatrixBox\">\r\n                {boxArray.map(( boxId, index ) => (\r\n                    <MatrixBox key={index + 1} \r\n                        onClick={event => checkClickedButton( event )} \r\n                        id={index + 1} \r\n                        value={boxId} \r\n                        iconVal={fasArray[boxId]}\r\n                    >\r\n                    </MatrixBox>\r\n                ))}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MatrixGroup;","\r\nimport React from 'react';\r\nimport Form from 'react-bootstrap/Form';\r\nimport './AddPlayer.css';\r\nimport Button from 'react-bootstrap/Button';\r\n\r\nlet playerNames = [];\r\nfunction submitPlayer( event ){\r\n    event.preventDefault();\r\n    if( playerNames.length < 2 ) {\r\n        let playerName = document.getElementsByName( \"playerName\" );\r\n        if( playerName[0].value === \"\" || playerName[0].value.length > 12 ) {\r\n            alert( \"Player Name should not be empty or longer than 12 characters.\" );\r\n        } else {\r\n            let playerHeader = document.getElementById( \"P\" + playerNames.length );\r\n            playerNames.push( playerName[0].value );\r\n            playerHeader.textContent = playerName[0].value;\r\n            playerName[0].value = \"\";\r\n        }\r\n    } \r\n    if( playerNames.length === 2 ) {\r\n        showMatrixForm();\r\n    }\r\n}\r\n\r\nfunction showMatrixForm() {\r\n    document.querySelector( \".MatrixBox\" ).style.display = \"block\";\r\n    document.querySelector( \".PlayerForm\" ).style.display = \"none\";\r\n}\r\n\r\nfunction AddPlayerForm() {\r\n    return(\r\n        <div className='PlayerForm'>\r\n            <h3>Quick Start</h3>\r\n            <ul>\r\n                <li>Add Player Names and Press Submit (twice)</li>\r\n                <li>In Next Scree memorize pairs of boxes</li>\r\n                <li>Press Start</li>\r\n                <li>Click on a pair of buttons</li>\r\n                <li>(If no match, game will switch Player.)</li>\r\n                <li>(Scores will be updated accordingly.) </li>\r\n            </ul>\r\n            <Form>\r\n                <Form.Group controlId=\"formGroupFullName\">\r\n                    <Form.Label>Player Name</Form.Label>\r\n                    <Form.Control name=\"playerName\" type=\"text\" placeholder=\"Player Name\" required/>\r\n                </Form.Group>\r\n            </Form>\r\n            <Button variant=\"primary\" type=\"submit\" onClick={event => submitPlayer( event )}>\r\n                Submit\r\n            </Button>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AddPlayerForm;","\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport getFAS from './getAwesomeFontThemes';\nimport MatrixBox from './MatrixBox';\nimport AddPlayerForm from './AddPlayer';\n\nlet numSquares=20;\nlet squareCont=[];\nlet fasArray = getFAS();\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <MatrixBox numBox={numSquares} fasArray={fasArray} squareCont={squareCont} />\n    <AddPlayerForm />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}